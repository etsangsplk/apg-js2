// This module simply defines several HTML quantities as text strings.
// This avoids the need for the application to carry along 
// resource functions that need to be available and read in.

"use strict;"
// screencss is the main CSS file used to display the apg output in HTML format.
// All of the pages, `/html/console.html`, etc. use it.
/*******************************************************************************************************************************
 * TITLE: Sinorca Screen Stylesheet * URI : sinorca/sinorca-screen.css * MODIF: 2003-Apr-30 19:31 +0800 *
 ******************************************************************************************************************************/
var screencss = '<style media="screen">';
screencss += "pre {";
screencss += "line-height: 1.2em;";
screencss += "font-size: 1.2em;";0
screencss += "}";
screencss += "body {";
screencss += "color: black;";
screencss += "background-color: rgb(240, 240, 240);";
screencss += "font-family: verdana, helvetica, arial, sans-serif;";
screencss += "font-size: 71%; /* Enables font size scaling in MSIE */";
screencss += "margin: 0;";
screencss += "padding: 0;";
screencss += "}";
screencss += "screencss>body {";
screencss += "font-size: 8.5pt;";
screencss += "}";
screencss += "acronym, .titleTip {";
screencss += "border-bottom: 1px dotted rgb(153, 153, 153);";
screencss += "cursor: help;";
screencss += "margin: 0;";
screencss += "padding: 0 0 0.4px 0;";
screencss += "}";
screencss += ".doNotDisplay {";
screencss += "display: none;";
screencss += "}";
screencss += ".smallCaps {";
screencss += "font-size: 110%;";
screencss += "font-variant: small-caps;";
screencss += "}";
screencss += ".superHeader {";
screencss += "color: white;";
screencss += "background-color: rgb(100, 135, 220);";
screencss += "height: 2em;";
screencss += "}";
screencss += ".superHeader a {";
screencss += "color: white;";
screencss += "background-color: transparent;";
screencss += "text-decoration: none;";
screencss += "font-size: 91%;";
screencss += "margin: 0;";
screencss += "padding: 0 0.5ex 0 0.25ex;";
screencss += "}";
screencss += ".superHeader a:hover {";
screencss += "text-decoration: underline;";
screencss += "}";
screencss += ".superHeader .left {";
screencss += "position: absolute;";
screencss += "left: 1.5mm;";
screencss += "top: 0.75ex;";
screencss += "}";
screencss += ".superHeader .right {";
screencss += "position: absolute;";
screencss += "right: 1.5mm;";
screencss += "top: 0.75ex;";
screencss += "}";
screencss += ".midHeader {";
screencss += "color: rgb(39, 78, 144);";
screencss += "background-color: rgb(140, 170, 230);";
screencss += "}";
screencss += ".headerTitle {";
screencss += "font-size: 337%;";
screencss += "font-weight: normal;";
screencss += "margin: 0 0 0 4mm;";
screencss += "padding: 0.25ex 0;";
screencss += "}";
screencss += ".subHeader {";
screencss += "color: white;";
screencss += "background-color: rgb(0, 51, 153);";
screencss += "margin: 0;";
screencss += "padding: 1ex 1ex 1ex 1.5mm;";
screencss += "}";
screencss += ".subHeader a {";
screencss += "color: white;";
screencss += "background-color: transparent;";
screencss += "text-decoration: none;";
screencss += "font-weight: bold;";
screencss += "margin: 0;";
screencss += "padding: 0 0.75ex 0 0.5ex;";
screencss += "}";
screencss += ".subHeader a:hover {";
screencss += "text-decoration: underline;";
screencss += "}";
screencss += ".superHeader .highlight, .subHeader .highlight {";
screencss += "color: rgb(253, 160, 91);";
screencss += "background-color: transparent;";
screencss += "}";
screencss += "#side-bar {";
screencss += "width: 15em;";
screencss += "float: left;";
screencss += "clear: left;";
screencss += "border-right: 1px solid rgb(153, 153, 153);";
screencss += "}";
screencss += "#side-bar div {";
screencss += "border-bottom: 1px solid rgb(153, 153, 153);";
screencss += "}";
screencss += ".sideBarTitle {";
screencss += "font-weight: bold;";
screencss += "margin: 0 0 0.5em 2.5mm;";
screencss += "padding: 1em 0 0 0;";
screencss += "}";
screencss += "#side-bar ul {";
screencss += "list-style-type: none;";
screencss += "list-style-position: outside;";
screencss += "margin: 0;";
screencss += "padding: 0 0 1.1em 0;";
screencss += "}";
screencss += "#side-bar li {";
screencss += "margin: 0;";
screencss += "padding: 0.1ex 0; /* Circumvents a rendering bug (?) in MSIE 6.0 */";
screencss += "}";
screencss += "#side-bar a, .thisPage {";
screencss += "color: rgb(0, 102, 204);";
screencss += "background-color: transparent;";
screencss += "text-decoration: none;";
screencss += "margin: 0;";
screencss += "padding: 0.75em 1ex 0.75em 5mm;";
screencss += "display: block;";
screencss += "}";
screencss += ".thisPage {";
screencss += "color: black;";
screencss += "background-color: white;";
screencss += "padding-left: 4mm;";
screencss += "border-top: 1px solid rgb(153, 153, 153);";
screencss += "border-bottom: 1px solid rgb(153, 153, 153);";
screencss += "}";
screencss += "#side-bar a:hover {";
screencss += "color: white;";
screencss += "background-color: rgb(100, 135, 220);";
screencss += "text-decoration: none;";
screencss += "}";
screencss += ".sideBarText {";
screencss += "line-height: 1.5em;";
screencss += "margin: 0 0 1em 0;";
screencss += "padding: 0 1.5ex 0 2.5mm;";
screencss += "display: block;";
screencss += "}";
screencss += "#side-bar .sideBarText a {";
screencss += "text-decoration: underline;";
screencss += "margin: 0;";
screencss += "padding: 0;";
screencss += "display: inline;";
screencss += "}";
screencss += "#side-bar .sideBarText a:hover {";
screencss += "color: rgb(0, 102, 204);";
screencss += "background-color: transparent;";
screencss += "text-decoration: none;";
screencss += "}";
screencss += ".lighterBackground {";
screencss += "color: inherit;";
screencss += "background-color: white;";
screencss += "}";
screencss += "#main-copy {";
screencss += "color: black;";
screencss += "background-color: white;";
screencss += "text-align: justify;";
screencss += "line-height: 1.5em;";
screencss += "margin: 0 0 0 15em;";
screencss += "padding: 0.5mm 5mm 5mm 5mm;";
screencss += "border-left: 1px solid rgb(153, 153, 153);";
screencss += "}";
screencss += "#main-copy p {";
screencss += "margin: 1em 1ex 2em 1ex;";
screencss += "padding: 0;";
screencss += "}";
screencss += "#main-copy a {";
screencss += "color: rgb(0, 102, 204);";
screencss += "background-color: transparent;";
screencss += "text-decoration: underline;";
screencss += "}";
screencss += "#main-copy a:hover {";
screencss += "text-decoration: none;";
screencss += "}";
screencss += "#main-copy h1 {";
screencss += "color: white;";
screencss += "background-color: rgb(100, 135, 220);";
screencss += "font-size: 100%;";
screencss += "font-weight: bold;";
screencss += "margin: 3em 0 0 0;";
screencss += "padding: 0.5ex 0 0.5ex 1ex;";
screencss += "}";
screencss += "#main-copy .topOfPage {";
screencss += "color: white;";
screencss += "background-color: transparent;";
screencss += "font-size: 91%;";
screencss += "font-weight: bold;";
screencss += "text-decoration: none;";
screencss += "margin: 2.5ex 1ex 0 0; /* For MSIE */";
screencss += "padding: 0;";
screencss += "float: right;";
screencss += "}";
screencss += "#main-copy>.topOfPage {";
screencss += "margin: 2.75ex 1ex 0 0; /* For fully standards-compliant user agents */";
screencss += "}";
screencss += "dl {";
screencss += "margin: 1em 1ex 2em 1ex;";
screencss += "padding: 0;";
screencss += "}";
screencss += "dt {";
screencss += "font-weight: bold;";
screencss += "margin: 0 0 0 0;";
screencss += "padding: 0;";
screencss += "}";
screencss += "dd {";
screencss += "margin: 0 0 2em 2em;";
screencss += "padding: 0;";
screencss += "}";
screencss += "#footer {";
screencss += "color: white;";
screencss += "background-color: rgb(100, 135, 220);";
screencss += "font-size: 91%;";
screencss += "margin: 0;";
screencss += "padding: 1em 2.5mm 2.5ex 2.5mm;";
screencss += "clear: both;";
screencss += "}";
screencss += "#footer .left {";
screencss += "line-height: 1.45em;";
screencss += "float: left;";
screencss += "clear: left;";
screencss += "}";
screencss += "#footer .right {";
screencss += "text-align: right;";
screencss += "line-height: 1.45em;";
screencss += "}";
screencss += "#footer a {";
screencss += "color: white;";
screencss += "background-color: transparent;";
screencss += "text-decoration: underline;";
screencss += "}";
screencss += "#footer a:hover {";
screencss += "text-decoration: none;";
screencss += "}";
screencss += '</style>\n';

// An alternative CSS style sheet to be used for printing an HTML page.
/*******************************************************************************************************************************
 * TITLE: Sinorca Print Stylesheet * URI : sinorca/sinorca-print.css * MODIF: 2003-May-01 19:30 +0800 *
 ******************************************************************************************************************************/
var printcss = '<style media="print">';
printcss += 'body {';
printcss += 'color: black;';
printcss += 'background-color: white;';
printcss += 'font-family: "times new roman", times, roman, serif;';
printcss += 'font-size: 12pt;';
printcss += 'margin: 0;';
printcss += 'padding: 0;';
printcss += '}';
printcss += 'acronym, .titleTip {';
printcss += 'font-style: italic;';
printcss += 'border-bottom: none;';
printcss += '}';
printcss += 'acronym:after, .titleTip:after {  /* Prints titles after the acronyms/titletips. Doesn\'t work in MSIE */';
printcss += 'content: "(" attr(title) ")\n  font-size: 90%;';
printcss += 'font-style: normal;';
printcss += 'padding-left: 1ex;';
printcss += '}';
printcss += '.doNotPrint {';
printcss += 'display: none !important;';
printcss += '}';
printcss += '#header {';
printcss += 'margin: 0;';
printcss += 'padding: 0;';
printcss += 'border-bottom: 1px solid black;';
printcss += '}';
printcss += '.superHeader {';
printcss += 'display: none;';
printcss += '}';
printcss += '.headerTitle {';
printcss += 'color: black;';
printcss += 'background-color: transparent;';
printcss += 'font-family: "trebuchet ms", verdana, helvetica, arial, sans-serif;';
printcss += 'font-size: 200%;';
printcss += 'font-weight: normal;';
printcss += 'text-decoration: none;';
printcss += 'margin: 0;';
printcss += 'padding: 0 0 0.5ex 0;';
printcss += '}';
printcss += '.subHeader {';
printcss += 'display: none;';
printcss += '}';
printcss += '#side-bar {';
printcss += 'display: none;';
printcss += '}';
printcss += '#main-copy {';
printcss += 'text-align: justify;';
printcss += 'margin: 0;';
printcss += 'padding: 0;';
printcss += '}';
printcss += '#main-copy h1 {';
printcss += 'font-family: "trebuchet ms", verdana, helvetica, arial, sans-serif;';
printcss += 'font-size: 120%;';
printcss += 'margin: 2ex 0 1ex 0;';
printcss += 'padding: 0;';
printcss += '}';
printcss += '#main-copy a {';
printcss += 'color: black;';
printcss += 'background-color: transparent;';
printcss += 'text-decoration: none;';
printcss += '}';
printcss += '#main-copy a:after {  /* Prints the links\' URIs after the links\' texts.Doesn\'t work in MSIE */';
printcss += 'content: "<" attr(href) ">\n  font-size: 90%;';
printcss += 'padding-left: 1ex;';
printcss += '}';
printcss += 'p {';
printcss += 'margin: 0 0 2ex 0;';
printcss += 'padding: 0;';
printcss += '}';
printcss += 'dl {';
printcss += 'margin: 0;';
printcss += 'padding: 0;';
printcss += '}';
printcss += 'dt {';
printcss += 'font-weight: bold;';
printcss += 'margin: 0;';
printcss += 'padding: 0 0 1ex 0;';
printcss += '}';
printcss += 'dd {';
printcss += 'margin: 0 0 2ex 1.5em;';
printcss += 'padding: 0;';
printcss += '}';
printcss += '.topOfPage {';
printcss += 'display: none;';
printcss += '}';
printcss += '#footer {';
printcss += 'margin: 2em 0 0 0;';
printcss += 'padding: 1ex 0 0 0;';
printcss += 'border-top: 1px solid black;';
printcss += '}';
printcss += '#footer a {';
printcss += 'color: black;';
printcss += 'background-color: transparent;';
printcss += 'text-decoration: none;';
printcss += '}';
printcss += '</style>\n';

// Attributes table style.
var attrTable = "<style>";
attrTable += "table.attr-table,\n";
attrTable += ".attr-table th,\n";
attrTable += ".attr-table td{text-align:center;border:1px solid black;border-collapse:collapse;}\n";
attrTable += ".attr-table b,\n";
attrTable += ".attr-table i,\n";
attrTable += ".attr-table kbd,\n";
attrTable += ".attr-table em,\n";
attrTable += ".attr-table code,\n";
attrTable += ".attr-table strong,\n";
attrTable += ".attr-table samp,\n";
attrTable += ".attr-table var\n";
attrTable += "{font-family:monospace;font-size:100%;font-style:normal;font-weight:normal;}\n";
attrTable += ".attr-table caption\n";
attrTable += "{font-family:monospace;font-size:125%;font-style:normal;font-weight:bold;text-align:left;}\n";
attrTable += ".attr-table th:nth-child(1){text-align:right;}\n";
attrTable += ".attr-table th:nth-child(2){text-align:right;}\n";
attrTable += ".attr-table td:nth-child(1){text-align:right;}\n";
attrTable += ".attr-table td:nth-child(2){text-align:right;}\n";
attrTable += ".attr-table b{color:#0000ff;}\n";
attrTable += ".attr-table i{color:#00ff00;}\n";
attrTable += ".attr-table kbd{color:#ff0000;}\n";
attrTable += ".attr-table em{color:#cc0000;font-style:italic;font-weight:bold;}\n";
attrTable += ".attr-table strong{font-weight:bold;}\n";
attrTable += ".attr-table code{color:blue;font-style:italic;font-weight:bold;font-size:75%;}\n";
attrTable += ".attr-table samp{background-color:#b2ffb2;color:#008000;}\n";
attrTable += ".attr-table var{color:#cc0000;font-weight:bold;}\n";
attrTable += ".attr-table b > em {font-size: 150%;font-weight:bold;}\n";
attrTable += ".attr-table i > em {font-size: 150%;font-weight:bold;}\n";
attrTable += ".attr-table kbd > em {font-size: 150%;font-weight:bold;}\n";
attrTable += "</style>\n";

// This is the JavaScript code for sorting the rule list
// as well for the show/hide anchors for the list of dependent rules.
// The `window.onload` function is written to work even if `jQuery` is not available.
// In that case the table will display, but the anchors for sorting will not work.
// Uses the `<script>` data written to the page by
// [rulesWithReferencesToHtml()](./attributes.html#section-12)
var rulesort = "<script>\n";
rulesort += "\"use strict;\"\n";
rulesort += "\n";
rulesort += 'window.onload = function() {\n';
rulesort += 'if(window.jQuery){\n';
rulesort += '    sort({data: "index"});\n';
rulesort += '  }else{\n';
rulesort += '    var el = document.getElementById("sort-links");\n';
rulesort += '    el.innerHTML = tableGen();\n';
rulesort += '  }\n';
rulesort += '}\n';
rulesort += "\n";
rulesort += "function sortByNameDown(lhs, rhs){\n";
rulesort += "	if(lhs.name < rhs.name){\n";
rulesort += "		return -1;\n";
rulesort += "	}\n";
rulesort += "	if(lhs.name > rhs.name){\n";
rulesort += "		return 1;\n";
rulesort += "	}\n";
rulesort += "	return 0;\n";
rulesort += "}\n";
rulesort += "function sortByNameUp(lhs, rhs){\n";
rulesort += "	if(lhs.name < rhs.name){\n";
rulesort += "		return 1;\n";
rulesort += "	}\n";
rulesort += "	if(lhs.name > rhs.name){\n";
rulesort += "		return -1;\n";
rulesort += "	}\n";
rulesort += "	return 0;\n";
rulesort += "}\n";
rulesort += "function sortByIndexDown(lhs, rhs){\n";
rulesort += "	if(lhs.index < rhs.index){\n";
rulesort += "		return -1;\n";
rulesort += "	}\n";
rulesort += "	if(lhs.index > rhs.index){\n";
rulesort += "		return 1;\n";
rulesort += "	}\n";
rulesort += "	return 0;\n";
rulesort += "}\n";
rulesort += "function sortByIndexUp(lhs, rhs){\n";
rulesort += "	if(lhs.index < rhs.index){\n";
rulesort += "		return 1;\n";
rulesort += "	}\n";
rulesort += "	if(lhs.index > rhs.index){\n";
rulesort += "		return -1;\n";
rulesort += "	}\n";
rulesort += "	return 0;\n";
rulesort += "}\n";
rulesort += "function sort(e) {\n";
rulesort += "	if(e.data === \"index\"){\n";
rulesort += "		if(tableData.indexSort === \"down\"){\n";
rulesort += "			tableData.rows.sort(sortByIndexUp);\n";
rulesort += "			tableData.indexSort = \"up\"\n";
rulesort += "		}else{\n";
rulesort += "			tableData.rows.sort(sortByIndexDown);\n";
rulesort += "			tableData.indexSort = \"down\"\n";
rulesort += "		}\n";
rulesort += "	}else{\n";
rulesort += "		if(tableData.nameSort === \"down\"){\n";
rulesort += "			tableData.rows.sort(sortByNameUp);\n";
rulesort += "			tableData.nameSort = \"up\"\n";
rulesort += "		}else{\n";
rulesort += "			tableData.rows.sort(sortByNameDown);\n";
rulesort += "			tableData.nameSort = \"down\"\n";
rulesort += "		}\n";
rulesort += "	}\n";
rulesort += "	$(\"div#sort-links\").html(tableGen());\n";
rulesort += "	$(\"#sort-links a.sortIndex\").click(\"index\", sort);\n";
rulesort += "	$(\"#sort-links a.sortName\").click(\"name\", sort);\n";
rulesort += "	$(\"#sort-links a.sortExpand\").click(\"show\", showAll);\n";
rulesort += "	$(\"#sort-links a.sortCollapse\").click(\"hide\", showAll);\n";
rulesort += "	tableData.rows.forEach(function(row) {\n";
rulesort += "		var text = $(\"#sort-links a.show-\" + row.name);\n";
rulesort += "		text.click(row, show);\n";
rulesort += "		if(row.visible === true){\n";
rulesort += "			text.html(\"hide\");\n";
rulesort += "			$(\"#sort-links tr.tr-\" + row.name).show();\n";
rulesort += "		}else{\n";
rulesort += "			text.html(\"show\");\n";
rulesort += "			$(\"#sort-links tr.tr-\" + row.name).hide();\n";
rulesort += "		}\n";
rulesort += "	});\n";
rulesort += "}\n";
rulesort += "function showAll(e){\n";
rulesort += "	tableData.rows.forEach(function(row){\n";
rulesort += "		var text = $(\"#sort-links a.show-\" + row.name);\n";
rulesort += "		var line = $(\"#sort-links tr.tr-\" + row.name);\n";
rulesort += "		if(e.data === \"show\"){\n";
rulesort += "			text.html(\"hide\");\n";
rulesort += "			$(\"#sort-links tr.tr-\" + row.name).show();\n";
rulesort += "			row.visible = true;\n";
rulesort += "		}else{\n";
rulesort += "			text.html(\"show\");\n";
rulesort += "			$(\"#sort-links tr.tr-\" + row.name).hide();\n";
rulesort += "			row.visible = false;\n";
rulesort += "		}\n";
rulesort += "	});\n";
rulesort += "}\n";
rulesort += "function show(e) {\n";
rulesort += "	var row = e.data;\n";
rulesort += "	var text = $(e.target);\n";
rulesort += "	if(row.visible === true){\n";
rulesort += "		text.html(\"show\");\n";
rulesort += "		$(\"#sort-links tr.tr-\" + row.name).hide();\n";
rulesort += "		row.visible = false;\n";
rulesort += "	}else{\n";
rulesort += "		text.html(\"hide\");\n";
rulesort += "		$(\"#sort-links tr.tr-\" + row.name).show();\n";
rulesort += "		row.visible = true;\n";
rulesort += "	}\n";
rulesort += "}\n";
rulesort += "function tableGen(e) {\n";
rulesort += "	var title = \"Rules with Dependencies\"\n";
rulesort += "	var html = \"\";\n";
rulesort += "	html += '<table class=\"apg-table\">';\n";
rulesort += "	html += '<caption>' + title;\n";
rulesort += "	html += '<br><a class=sortExpand href=\"#\">show all<\/a><br><a class=sortCollapse href=\"#\">hide all<\/a>';\n";
rulesort += "	html += '<\/caption>';\n";
rulesort += "	html += '<tr><th><a class=\"sortIndex\" href=\"#\">index<\/a><\/th><th><a class=\"sortName\" href=\"#\">rule<\/a><\/th><th>refers to<\/th><\/tr>';\n";
rulesort += "	tableData.rows.forEach(function(rule) {\n";
rulesort += "		if (rule.dependents.length > 0) {\n";
rulesort += "			html += '<tr><td>' + rule.index + '<\/td><td>' + rule.name\n";
rulesort += "					+ '<\/td><td><a class=\"show-' + rule.name\n";
rulesort += "					+ '\" href=\"#\">hide<\/a><\/td><\/tr>';\n";
rulesort += "			html += '<div class=\"div-' + rule.name + '\">';\n";
rulesort += "			for (var i = 0; i < rule.dependents.length; i += 1) {\n";
rulesort += "				var obj = rule.dependents[i];\n";
rulesort += "				html += '<tr class=\"tr-' + rule.name + '\"><td><\/td><td>'\n";
rulesort += "						+ obj.index + '<\/td><td>' + obj.name\n";
rulesort += "						+ '<\/td><\/tr>';\n";
rulesort += "			}\n";
rulesort += "		} else {\n";
rulesort += "			html += '<tr><td>' + rule.index + '<\/td><td>' + rule.name\n";
rulesort += "					+ '<\/td><td><\/td><\/tr>';\n";
rulesort += "		}\n";
rulesort += "	});\n";
rulesort += "	html += \"<\/table>\";\n";
rulesort += "	return html;\n";
rulesort += "}</script>\n";

// This is the JavaScript code for sorting the rule list
// on the `html/attributes.html` page.
// The `window.onload` function is written to work even if `jQuery` is not available.
// In that case the table will display, but the anchors for sorting will not work.
// Uses the `<script>` data written to the page by
// [attrsToHtml()](./attributes.html#section-7)
var attrsort = "<script>\n";
attrsort += "\"use strict;\"\n";
attrsort += "\n";
attrsort += 'window.onload = function() {\n';
attrsort += 'if(window.jQuery){\n';
attrsort += '    sort({data: "null"});\n';
attrsort += '  }else{\n';
attrsort += '    var el = document.getElementById("sort-links");\n';
attrsort += '    el.innerHTML = tableGen();\n';
attrsort += '  }\n';
attrsort += '}\n';
attrsort += "\n";
attrsort += "function sortCols(lhs, rhs) {\n";
attrsort += "	var lval, rval;\n";
attrsort += "	switch (attrSortCol) {\n";
attrsort += "	case \"rule\":\n";
attrsort += "		\/\/ alphabetical\n";
attrsort += "		lval = lhs.lower;\n";
attrsort += "		rval = rhs.lower;\n";
attrsort += "		break;\n";
attrsort += "	case \"type\":\n";
attrsort += "		\/\/ numerical on type\n";
attrsort += "		lval = lhs.type;\n";
attrsort += "		rval = rhs.type;\n";
attrsort += "		break;\n";
attrsort += "	case \"left\":\n";
attrsort += "		\/\/ descending: false (no) preceeds true (yes)\n";
attrsort += "		lval = (lhs.left === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.left === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"nested\":\n";
attrsort += "		lval = (lhs.nested === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.nested === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"right\":\n";
attrsort += "		lval = (lhs.right === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.right === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"cyclic\":\n";
attrsort += "		lval = (lhs.cyclic === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.cyclic === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"finite\":\n";
attrsort += "		lval = (lhs.finite === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.finite === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"empty\":\n";
attrsort += "		lval = (lhs.empty === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.empty === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"notempty\":\n";
attrsort += "		lval = (lhs.notempty === false) ? 0 : 1;\n";
attrsort += "		rval = (rhs.notempty === false) ? 0 : 1;\n";
attrsort += "		break;\n";
attrsort += "	case \"index\":\n";
attrsort += "	default:\n";
attrsort += "		\/\/ numerical\n";
attrsort += "		lval = lhs.index;\n";
attrsort += "		rval = rhs.index;\n";
attrsort += "		break;\n";
attrsort += "	}\n";
attrsort += "	if (lval < rval) {\n";
attrsort += "		if (attrSortDir === 0) {\n";
attrsort += "			return -1;\n";
attrsort += "		}\n";
attrsort += "		return 1;\n";
attrsort += "	}\n";
attrsort += "	if (lval > rval) {\n";
attrsort += "		if (attrSortDir === 0) {\n";
attrsort += "			return 1;\n";
attrsort += "		}\n";
attrsort += "		return -1;\n";
attrsort += "	}\n";
attrsort += "	return 0;\n";
attrsort += "}\n";
attrsort += "function sortErrors(lhs, rhs) {\n";
attrsort += "	var rerror = (rhs.left === true || rhs.cyclic === true || rhs.finite === false) ? true : false;\n";
attrsort += "	var lerror = (lhs.left === true || lhs.cyclic === true || lhs.finite === false) ? true : false;\n";
attrsort += "	\n";
attrsort += "	if (rerror === false && lerror === true ) {\n";
attrsort += "		return -1;\n";
attrsort += "	}\n";
attrsort += "	if (rerror === true && lerror === false) {\n";
attrsort += "		return 1;\n";
attrsort += "	}\n";
attrsort += "	return 0;\n";
attrsort += "}\n";
attrsort += "function sort(e) {\n";
attrsort += "	if (e.data !== null) {\n";
attrsort += "		\/\/ sort direction: 0 = descending, 1 = ascending\n";
attrsort += "		switch (e.data) {\n";
attrsort += "		case \"rule\":\n";
attrsort += "			attrSortCol = \"rule\"\n";
attrsort += "			attrDirs.rule = (attrDirs.rule === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.rule;\n";
attrsort += "			break;\n";
attrsort += "		case \"type\":\n";
attrsort += "			attrSortCol = \"type\"\n";
attrsort += "			attrDirs.type = (attrDirs.type === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.type;\n";
attrsort += "			break;\n";
attrsort += "		case \"left\":\n";
attrsort += "			attrSortCol = \"left\"\n";
attrsort += "			attrDirs.left = (attrDirs.left === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.left;\n";
attrsort += "			break;\n";
attrsort += "		case \"nested\":\n";
attrsort += "			attrSortCol = \"nested\"\n";
attrsort += "			attrDirs.nested = (attrDirs.nested === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.nested;\n";
attrsort += "			break;\n";
attrsort += "		case \"right\":\n";
attrsort += "			attrSortCol = \"right\"\n";
attrsort += "			attrDirs.right = (attrDirs.right === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.right;\n";
attrsort += "			break;\n";
attrsort += "		case \"cyclic\":\n";
attrsort += "			attrSortCol = \"cyclic\"\n";
attrsort += "			attrDirs.cyclic = (attrDirs.cyclic === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.cyclic;\n";
attrsort += "			break;\n";
attrsort += "		case \"finite\":\n";
attrsort += "			attrSortCol = \"finite\"\n";
attrsort += "			attrDirs.finite = (attrDirs.finite === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.finite;\n";
attrsort += "			break;\n";
attrsort += "		case \"empty\":\n";
attrsort += "			attrSortCol = \"empty\"\n";
attrsort += "			attrDirs.empty = (attrDirs.empty === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.empty;\n";
attrsort += "			break;\n";
attrsort += "		case \"notempty\":\n";
attrsort += "			attrSortCol = \"notempty\"\n";
attrsort += "			attrDirs.notempty = (attrDirs.notempty === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.notempty;\n";
attrsort += "			break;\n";
attrsort += "		case \"index\":\n";
attrsort += "		default:\n";
attrsort += "			attrSortCol = \"index\"\n";
attrsort += "			attrDirs.index = (attrDirs.index === 0) ? 1 : 0;\n";
attrsort += "			attrSortDir = attrDirs.index;\n";
attrsort += "			break;\n";
attrsort += "		}\n";
attrsort += "		attrRows.sort(sortCols);\n";
attrsort += "		if (attrHasErrors && attrSortErrors) {\n";
attrsort += "			attrRows.sort(sortErrors);\n";
attrsort += "		}\n";
attrsort += "	}\n";
attrsort += "	function check(){\n";
attrsort += "		var errors = $(\"#sort-links input#errors\");\n";
attrsort += "		if(errors.is(\":checked\")){\n";
attrsort += "			attrSortErrors = true;\n";
attrsort += "		}else{\n";
attrsort += "			attrSortErrors = false;\n";
attrsort += "		}\n";
attrsort += "	}\n";
attrsort += "\n";
attrsort += "	$(\"div#sort-links\").html(tableGen());\n";
attrsort += "	$(\"#sort-links a.index\").click(\"index\", sort);\n";
attrsort += "	$(\"#sort-links a.rule\").click(\"rule\", sort);\n";
attrsort += "	$(\"#sort-links a.type\").click(\"type\", sort);\n";
attrsort += "	$(\"#sort-links a.left\").click(\"left\", sort);\n";
attrsort += "	$(\"#sort-links a.nested\").click(\"nested\", sort);\n";
attrsort += "	$(\"#sort-links a.right\").click(\"right\", sort);\n";
attrsort += "	$(\"#sort-links a.cyclic\").click(\"cyclic\", sort);\n";
attrsort += "	$(\"#sort-links a.finite\").click(\"finite\", sort);\n";
attrsort += "	$(\"#sort-links a.empty\").click(\"empty\", sort);\n";
attrsort += "	$(\"#sort-links a.notempty\").click(\"notempty\", sort);\n";
attrsort += "	$(\"#sort-links input#errors\").click(check);\n";
attrsort += "}\n";
attrsort += "function yesno(val) {\n";
attrsort += "	return (val === true) ? \"yes\" : \"no\"\n";
attrsort += "}\n";
attrsort += "function tableGen(e) {\n";
attrsort += "	var title = \"Grammar Attributes\"\n";
attrsort += "	var checked = attrSortErrors ? \"checked\" : \"\"\n";
attrsort += "	var html = \"\"\n";
attrsort += "	html += '<table class=\"attr-table\">';\n";
attrsort += "	html += '<caption>' + title;\n";
attrsort += "	if(attrHasErrors){\n";
attrsort += "		html += '<br><input id=\"errors\" type=\"checkbox\" '+checked+'>keep errors at top<\/input><\/caption>';\n";
attrsort += "	}\n";
attrsort += "	html += '<\/caption>';\n";
attrsort += "	html += '<tr>';\n";
attrsort += "	html += '<th><a class=\"index\" href=\"#\">index<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"rule\" href=\"#\">rule<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"type\" href=\"#\">type<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"left\" href=\"#\">left<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"nested\" href=\"#\">nested<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"right\" href=\"#\">right<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"cyclic\" href=\"#\">cyclic<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"finite\" href=\"#\">finite<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"empty\" href=\"#\">empty<\/a><\/th>';\n";
attrsort += "	html += '<th><a class=\"notempty\" href=\"#\">not empty<\/a><\/th>';\n";
attrsort += "	html += '<\/tr>';\n";
attrsort += "	attrRows.forEach(function(row) {\n";
attrsort += "		var left = yesno(row.left);\n";
attrsort += "		if (row.left === true) {\n";
attrsort += "			left = '<kbd>' + left + '<\/kbd>';\n";
attrsort += "		}\n";
attrsort += "		var cyclic = yesno(row.cyclic);\n";
attrsort += "		if (row.cyclic === true) {\n";
attrsort += "			cyclic = '<kbd>' + cyclic + '<\/kbd>';\n";
attrsort += "		}\n";
attrsort += "		var finite = yesno(row.finite);\n";
attrsort += "		if (row.finite === false) {\n";
attrsort += "			finite = '<kbd>' + finite + '<\/kbd>';\n";
attrsort += "		}\n";
attrsort += "		html += '<tr>';\n";
attrsort += "		html += '<td>' + row.index + '<\/td>';\n";
attrsort += "		html += '<td>' + row.rule + '<\/td>';\n";
attrsort += "		html += '<td>' + row.typename + '<\/td>';\n";
attrsort += "		html += '<td>' + left + '<\/td>';\n";
attrsort += "		html += '<td>' + yesno(row.nested) + '<\/td>';\n";
attrsort += "		html += '<td>' + yesno(row.right) + '<\/td>';\n";
attrsort += "		html += '<td>' + cyclic + '<\/td>';\n";
attrsort += "		html += '<td>' + finite + '<\/td>';\n";
attrsort += "		html += '<td>' + yesno(row.empty) + '<\/td>';\n";
attrsort += "		html += '<td>' + yesno(row.notempty) + '<\/td>';\n";
attrsort += "		html += '<\/tr>';\n";
attrsort += "	});\n";
attrsort += "	html += \"<\/table>\"\n";
attrsort += "	return html;\n";
attrsort += "}</script>\n";

// Export the strings here.
exports.screencss = screencss;
exports.printcss = printcss;
exports.attrsort = attrsort;
exports.attrTable = attrTable;
exports.rulesort = rulesort;
